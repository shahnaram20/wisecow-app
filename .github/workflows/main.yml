name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Trigger the workflow on push to main branch
  pull_request:
    branches:
      - main  # Trigger the workflow on pull request to main branch

jobs:
  # Job 1: Build Docker Image and Push to DockerHub
  build:
    runs-on: ubuntu-latest

    steps:
    # Checkout the code
    - name: Checkout repository
      uses: actions/checkout@v2

    # Set up Docker Buildx
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    # Log in to DockerHub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Build and push the Docker image to DockerHub
    - name: Build and push Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/wisecow-app:latest .
        docker push ${{ secrets.DOCKER_USERNAME }}/wisecow-app:latest

  # Job 2: Deploy to Kubernetes
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    # Checkout the code
    - name: Checkout repository
      uses: actions/checkout@v2

    # Set up Kubernetes CLI (kubectl)
    - name: Set up kubectl
      uses: azure/setup-kubectl@v1
      with:
        kubeconfig: ${{ secrets.KUBE_CONFIG }}

    # Apply Kubernetes manifests (deploy, service, ingress)
    - name: Apply Kubernetes manifests
      run: |
        kubectl apply -f manifests/deployment.yaml
        kubectl apply -f manifests/service.yaml
        kubectl apply -f manifests/ingress.yaml
        kubectl apply -f manifests/tls.yaml

  # Job 3: Verify Deployment (Optional)
  verify:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    # Set up kubectl
    - name: Set up kubectl
      uses: azure/setup-kubectl@v1
      with:
        kubeconfig: ${{ secrets.KUBE_CONFIG }}

    # Verify that the pods are running
    - name: Verify pods are running
      run: |
        kubectl get pods
        kubectl get services
        kubectl get ingress
        kubectl get deployments

  # Job 4: Send Notification (Optional)
  notify:
    runs-on: ubuntu-latest
    needs: verify
    steps:
    - name: Send notification
      run: |
        echo "Deployment completed successfully!" # Replace with actual notification logic (e.g., Slack, email)

